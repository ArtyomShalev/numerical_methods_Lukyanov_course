clear all
%ввод исходных данных
%-------------------------- объявление констант ------------------------------------
mu0 = pi*4*1e-7; %магнитная постоянная
ee0 = 1e-9/(pi*36); %электрическая постоянная
dd = 25; %дискретизация длины волны 1/10
%----------------------------------------------------------------------
ss1 = 0; %удельная проводимость среды
ss2 = 1e+12; %удельная проводимость препятствия (идеально проводящее тело)
ss3 = 1e-15; %удельная проводимость препятствия (FR-4)
ss4 = 1e-15; %удельная проводимость препятствия (кварцевое стекло)
ee1 = 1; %отн. диэл. проницаемость среды 
ee2 = 1; %отн. диэл. проницаемость препятствия (идеально проводящее тело)
ee3 = 4.3; %отн. диэл. проницаемость препятствия (FR-4)
ee4 = 3.8; %отн. диэл. проницаемость препятствия (кварцевое стекло)
mu1 = 1; %отн. магн. проницаемость среды 
mu2 = 1; %отн. магн. проницаемость препятствия (идеально проводящее тело)
mu3 = 1; %отн. магн. проницаемость препятствия (FR-4)
mu4 = 1; %отн. магн. проницаемость препятствия (кварцевое стекло)
EE1 = ee0 * ee1; %абс. диэл. проницаемость среды 
EE2 = ee0 * ee2; %абс. диэл. проницаемость препятствия (идеально проводящее тело)
EE3 = ee0 * ee3; %абс. диэл. проницаемость препятствия (FR-4)
EE4 = ee0 * ee4; %абс. диэл. проницаемость препятствия (кварцевое стекло)
MU1 = mu0 * mu1; %абс. магн. проницаемость среды
MU2 = mu0 * mu2; %абс. магн. проницаемость препятствия (идеально проводящее тело)
MU3 = mu0 * mu3; %абс. магн. проницаемость препятствия (FR-4)
MU4 = mu0 * mu4; %абс. магн. проницаемость препятствия (кварцевое стекло)
tt0 = 1; %начальный временной шаг
%------------------------- определение фазовой скорости с (без учета
%свойств препятсвия) -------------------------------------------------
c = 1/sqrt(mu0*ee0);   %фазовая скорость
f = 100*1e6; %частота МГц
lyambda = c/f; %наибольшая длина волны
dlyambda = round(lyambda/lyambda*dd); %шаг по длине волны в ячейках
A = 100; %амплитуда 100 мкВ
%L_PGU = введутся позже
%PGU = 
% ---- определение пространтсвенной дискреты dx, dy, dz ------
dy = c / (dd*f); %длина ячейки вдоль оси OY
dz = dy; %длина ячейки вдоль оси OZ
dx = dy; %длина ячейки вдоль оси OX
% ----------- определение временной дискреты dt --------------------
dt = dy / (sqrt(3)*c);
% определение размеров пространства и препятствия и времени наблюдения
Space = round(5*dd*sqrt(3)); % время наблюдения за распространением ЭМВ
% ----- количество длин волн вдоль оси координат
% ----- количество ячеек вдоль оси координат
nx = round(6*dlyambda/1); %nx - ширина расчетной области в ячейках
ny = round(6*dlyambda/1); %ny - ширина расчетной области в ячейках
% ------ определение коэффициентов Kh, Ke, Ek ------------------------
Kh = dt/MU1; % коэффициент при Н
Ke1 = (1-((dt*ss1)/(2*EE1)))/(1+((dt*ss1)/(2*EE1))); % коэффициент при Е свободного пространтства
Ke2 = (1-((dt*ss2)/(2*EE2)))/(1+((dt*ss2)/(2*EE2))); % коэффициент при Е препятствия
Ke3 = (1-((dt*ss3)/(2*EE3)))/(1+((dt*ss3)/(2*EE3))); % коэффициент при Е препятствия FR-4 
Ke4 = (1-((dt*ss4)/(2*EE4)))/(1+((dt*ss4)/(2*EE4))); % коэффициент при Е препятствия (кварцевое стекло)
Ek1 = (2*dt)/(2*EE1+dt*ss1); % коэффициент при потерях свободного пространтства
Ek2 = (2*dt)/(2*EE2+dt*ss2); % коэффициент при потерях препятствия
Ek3 = (2*dt)/(2*EE3+dt*ss3); % коэффициент при потерях препятствия FR-4
Ek4 = (2*dt)/(2*EE4+dt*ss4); % коэффициент при потерях препятствия (кварцевое стекло)

% ----- определение векторов в ячейке КРВО для 2D задачи ------------
Ez = zeros(nx, ny);
Hx = zeros(nx, ny);
Hy = zeros(nx, ny);

% Присвоение расчетной области параметров свободного пространства
EzKe = Ke1.*ones(nx, ny);
EzEk = Ek1.*ones(nx, ny);

%цикл для 2D задачи
for n = 1:Space
U = A*sin(2*pi*f*n*dt); %напряжение изменяется по гармоническому закону
Ez(nx/2,ny/2) = -U/dz; %источник излучения находится в центре расчетной области

clear i j 
i = 1:nx;
j = 1:ny-1;
Hx(i,j) = Hx(i,j)-Kh.*((Ez(i,j+1)-Ez(i,j))/dy);

clear i j 
i = 1:nx-1;
j = 1:ny;
Hy(i,j) = Hy(i,j)-Kh.*(-(Ez(i+1,j)-Ez(i,j))/dx);

clear i j 
i = 2:nx;
j = 2:ny;
Ez(i,j) = Ez(i,j).*EzKe(i,j)+EzEk(i,j).*((Hy(i,j)-Hy(i-1,j))/dx - (Hx(i,j)-Hx(i,j-1))/dy);
end;


n_Ez = Ez./max(Ez, [], 'all'); %нормировка z-компоненты поля Е
mean_n_Ez = mean(n_Ez, 'all');   %определение среднего значения нормированной z-компоненты поля Е

for i = 1:nx
    for j = 1:ny
        SKO(i, j) = (mean_n_Ez - n_Ez(i,j)).^2; 
    end
end


X=1:nx; Y=1:ny;
surf(X,Y,SKO);
min_SKO = min(SKO, [], 'all');
max_SKO = max(SKO, [], 'all');
V=[min_SKO max_SKO];
caxis(V);
shading interp;
grid on;
colormap jet;
c=colorbar('Location', 'EastOutside');
view(90,-90);




